
server {
        listen 443 ssl default_server;
        server_name  {{ srv_hostname }};

        ssl_certificate /etc/nginx/ssl/{{ cert_dir_name }}/ca_cert.crt;
        ssl_certificate_key /etc/nginx/ssl/{{ cert_dir_name }}/root_key.pem;
        ssl_password_file /root/.ssl_passwords;
        include /etc/nginx/snippets/ssl.conf;

        access_log /var/log/nginx/{{ access_log_name }}.log;
        access_log /etc/nginx/404.log combined if=$should_log;
        error_log /var/log/nginx/{{ error_log_name }}.log info;

        root /var/www/{{ srv_root_name }}/ ;

        index index.php index.html index.htm default.html default.htm;

	      #client_max_body_size 64M;



        # add global x-content-type-options header
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options nosniff;

        # deny running scripts inside writable directories
        location ~* /(images|cache|media|logs|tmp)/.*\.(php|pl|py|jsp|asp|sh|cgi|ps|rb|cpp|c)$ {
                return 403;
                error_page 403 /403_error.html;
        }


        location / {
                index index.php index.html index.htm;
                try_files $uri $uri/ /index.php?$args;
        }

        location ~* \.(gif|jpg|jpeg|png|css|js)$ {
                expires max;
        }

        location ~ \.php$ {
                try_files $uri =404;
                #fastcgi_pass  127.0.0.1:9000;
                fastcgi_pass  unix:/var/run/php/php7.2-fpm.sock;
                fastcgi_index index.php;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
                include    fastcgi_params;
                include /etc/nginx/fastcgi.conf;
        }

        # caching of files
        location ~* \.(ico|pdf|flv)$ {
                expires 1y;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|swf|xml|txt)$ {
                expires 14d;
        }
}



server {
	listen 80;
	listen [::]:80;
	server_name server_name _;
        #rewrite ^ https://? permanent;
        if ($scheme = http) {
        return 301 https://$host$request_uri;
        }
}




# deny access to .htaccess files, if Apache's document root
# concurs with nginx's one
#
#location ~ /\.ht {
#	deny all;
#}
